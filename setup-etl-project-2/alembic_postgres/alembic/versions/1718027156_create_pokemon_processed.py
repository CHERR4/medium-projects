"""Create pokemon processed

Revision ID: 4b20225b58f7
Revises:
Create Date: 2024-05-12 21:31:00.136766

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "4b20225b58f7"
down_revision = None
branch_labels = None
depends_on = None

PokemonType = sa.Enum(
    "Flying",
    "Fighting",
    "Fairy",
    "Fire",
    "Ice",
    "Steel",
    "Grass",
    "Normal",
    "Dark",
    "Water",
    "Dragon",
    "Psychic",
    "Poison",
    "Ghost",
    "Rock",
    "Ground",
    "Bug",
    "Electric",
    name="pokemon_type",
)

PokemonAbility = sa.Enum(
    "Misty Surge",
    "Surge Surfer",
    "Dancer",
    "Protean",
    "Serene Grace",
    "Stalwart",
    "Guard Dog",
    "Electric Surge",
    "Refrigerate",
    "Grassy Surge",
    "Tera Shell",
    "Pressure",
    "Hadron Engine",
    "As One",
    "Moody",
    "Rocky Payload",
    "Fairy Aura",
    "Tinted Lens",
    "Triage",
    "Clear Body",
    "Gooey",
    "Dry Skin",
    "Prankster",
    "Water Compaction",
    "Wonder Skin",
    "Long Reach",
    "Sand Stream",
    "Flower Gift",
    "Magician",
    "Screen Cleaner",
    "Desolate Land",
    "Cheek Pouch",
    "Blaze",
    "Storm Drain",
    "Mega Launcher",
    "Grim Neigh",
    "Stance Change",
    "Defeatist",
    "Intrepid Sword",
    "Water Bubble",
    "Trace",
    "Flare Boost",
    "Sand Veil",
    "Cute Charm",
    "Zen Mode",
    "Galvanize",
    "Immunity",
    "Neutralizing Gas",
    "Air Lock",
    "Illusion",
    "Bad Dreams",
    "Pixilate",
    "Tough Claws",
    "Heavy Metal",
    "Ice Face",
    "Flash Fire",
    "Hustle",
    "Mycelium Might",
    "Suction Cups",
    "Gulp Missile",
    "Battle Bond",
    "Tablets of Ruin",
    "No Guard",
    "Vital Spirit",
    "Early Bird",
    "Color Change",
    "Hyper Cutter",
    "Pickup",
    "Arena Trap",
    "Symbiosis",
    "Flame Body",
    "White Smoke",
    "Beast Boost",
    "Merciless",
    "Sap Sipper",
    "Pure Power",
    "Justified",
    "Cud Chew",
    "Forewarn",
    "Dragon's Maw",
    "Solar Power",
    "Unburden",
    "Sand Force",
    "Reckless",
    "Motor Drive",
    "Ripen",
    "Forecast",
    "Oblivious",
    "Infiltrator",
    "Drought",
    "Rock Head",
    "Quick Feet",
    "Gluttony",
    "Perish Body",
    "Primordial Sea",
    "Beads of Ruin",
    "Sniper",
    "Friend Guard",
    "Unnerve",
    "Ice Scales",
    "Neuroforce",
    "Frisk",
    "Defiant",
    "Poison Puppeteer",
    "Magnet Pull",
    "Aroma Veil",
    "Strong Jaw",
    "Shadow Shield",
    "Illuminate",
    "Weak Armor",
    "Libero",
    "Moxie",
    "Poison Point",
    "Sheer Force",
    "Delta Stream",
    "Steely Spirit",
    "Power Construct",
    "Healer",
    "Good as Gold",
    "Punk Rock",
    "Schooling",
    "Tangled Feet",
    "Iron Barbs",
    "Sword of Ruin",
    "Iron Fist",
    "Earth Eater",
    "Liquid Ooze",
    "Corrosion",
    "Regenerator",
    "Seed Sower",
    "Steadfast",
    "Skill Link",
    "Pickpocket",
    "Protosynthesis",
    "Truant",
    "Big Pecks",
    "Stench",
    "Orichalcum Pulse",
    "Competitive",
    "Dark Aura",
    "Aftermath",
    "Soul-Heart",
    "Inner Focus",
    "Cotton Down",
    "Ball Fetch",
    "Mirror Armor",
    "Ice Body",
    "Purifying Salt",
    "Stamina",
    "Thick Fat",
    "Mimicry",
    "Teraform Zero",
    "Fluffy",
    "Solid Rock",
    "Overgrow",
    "Mold Breaker",
    "Volt Absorb",
    "Rain Dish",
    "Steelworker",
    "Grass Pelt",
    "Poison Touch",
    "Psychic Surge",
    "Stall",
    "Toxic Boost",
    "Adaptability",
    "Battery",
    "Sturdy",
    "Sweet Veil",
    "Telepathy",
    "Well-Baked Body",
    "â€”",
    "Swift Swim",
    "Honey Gather",
    "Cloud Nine",
    "Rivalry",
    "Gorilla Tactics",
    "Marvel Scale",
    "Magma Armor",
    "Klutz",
    "Shield Dust",
    "Magic Guard",
    "Lightning Rod",
    "Shell Armor",
    "RKS System",
    "Snow Cloak",
    "Tangling Hair",
    "Sharpness",
    "Cursed Body",
    "Dazzling",
    "Hospitality",
    "Normalize",
    "Toxic Chain",
    "Imposter",
    "Limber",
    "Fur Coat",
    "Scrappy",
    "Static",
    "Hunger Switch",
    "Natural Cure",
    "Costar",
    "Wimp Out",
    "Full Metal Body",
    "Mind's Eye",
    "Turboblaze",
    "Multiscale",
    "Berserk",
    "Prism Armor",
    "Quick Draw",
    "Run Away",
    "Speed Boost",
    "Slow Start",
    "Own Tempo",
    "Slush Rush",
    "Effect Spore",
    "Parental Bond",
    "Wind Power",
    "Disguise",
    "Poison Heal",
    "Steam Engine",
    "Filter",
    "Stakeout",
    "Sand Spit",
    "Anger Shell",
    "Multitype",
    "Light Metal",
    "Keen Eye",
    "Sticky Hold",
    "Wind Rider",
    "Chilling Neigh",
    "Emergency Exit",
    "Analytic",
    "Victory Star",
    "Thermal Exchange",
    "Simple",
    "Anger Point",
    "Intimidate",
    "Harvest",
    "Download",
    "Aerilate",
    "Tera Shift",
    "Super Luck",
    "Water Veil",
    "Contrary",
    "Battle Armor",
    "Propeller Tail",
    "Drizzle",
    "Water Absorb",
    "Overcoat",
    "Supersweet Syrup",
    "Plus",
    "Armor Tail",
    "Levitate",
    "Curious Medicine",
    "Huge Power",
    "Swarm",
    "Mummy",
    "Leaf Guard",
    "Magic Bounce",
    "Rough Skin",
    "Sand Rush",
    "Pastel Veil",
    "Lingering Aroma",
    "Comatose",
    "Transistor",
    "Hydration",
    "Compound Eyes",
    "Heatproof",
    "Shadow Tag",
    "Toxic Debris",
    "Synchronize",
    "Dauntless Shield",
    "Power of Alchemy",
    "Wonder Guard",
    "Snow Warning",
    "Power Spot",
    "Chlorophyll",
    "Technician",
    "Bulletproof",
    "Shed Skin",
    "Gale Wings",
    "Aura Break",
    "Anticipation",
    "Torrent",
    "Queenly Majesty",
    "Damp",
    "Electromorphosis",
    "Minus",
    "Insomnia",
    "Commander",
    "Opportunist",
    "Quark Drive",
    "Vessel of Ruin",
    "Supreme Overlord",
    "Shields Down",
    "Wandering Spirit",
    "Unaware",
    "Guts",
    "Innards Out",
    "Zero to Hero",
    "Soundproof",
    "Teravolt",
    "Receiver",
    "Flower Veil",
    "Rattled",
    "Unseen Fist",
    "Liquid Voice",
    name="pokemon_ability",
)

PokemonStat = sa.Enum(
    "hp",
    "attack",
    "defense",
    "special_attack",
    "special_defense",
    "speed",
    name="pokemon_stat",
)

GrowthRate = sa.Enum(
    "Fast",
    "Erratic",
    "Fluctuating",
    "Medium Fast",
    "Medium Slow",
    "Slow",
    name="growth_rate",
)


def upgrade():
    op.create_table(
        "pokemon_processed",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("pokemon", sa.String(), nullable=False),
        sa.Column("main_type", PokemonType, nullable=False),
        sa.Column("secondary_type", PokemonType, nullable=True),
        sa.Column("species", sa.String(), nullable=False),
        sa.Column("height", sa.Float(), nullable=True),
        sa.Column("weight", sa.Float(), nullable=True),
        sa.Column("main_ability", PokemonAbility, nullable=True),
        sa.Column("secondary_ability", PokemonAbility, nullable=True),
        sa.Column("hidden_ability", PokemonAbility, nullable=True),
        sa.Column("ev_field_stats", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("catch_rate", sa.Float(), nullable=True),
        sa.Column("lowest_catch_rate", sa.Float(), nullable=True),
        sa.Column("base_friendship", sa.Integer(), nullable=True),
        sa.Column("base_exp", sa.Integer(), nullable=True),
        sa.Column("growth_rate", GrowthRate, nullable=True),
        sa.Column("egg_groups", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("male_gender_rate", sa.Float(), nullable=True),
        sa.Column("female_gender_rate", sa.Float(), nullable=True),
        sa.Column("egg_cycles", sa.Integer(), nullable=True),
        sa.Column("shortest_egg_cycle_steps", sa.Integer(), nullable=True),
        sa.Column("longest_egg_cycle_steps", sa.Integer(), nullable=True),
        sa.Column("hp_base", sa.Integer(), nullable=False),
        sa.Column("hp_min", sa.Integer(), nullable=False),
        sa.Column("hp_max", sa.Integer(), nullable=False),
        sa.Column("attack_base", sa.Integer(), nullable=False),
        sa.Column("attack_min", sa.Integer(), nullable=False),
        sa.Column("attack_max", sa.Integer(), nullable=False),
        sa.Column("defense_base", sa.Integer(), nullable=False),
        sa.Column("defense_min", sa.Integer(), nullable=False),
        sa.Column("defense_max", sa.Integer(), nullable=False),
        sa.Column("special_attack_base", sa.Integer(), nullable=False),
        sa.Column("special_attack_min", sa.Integer(), nullable=False),
        sa.Column("special_attack_max", sa.Integer(), nullable=False),
        sa.Column("special_defense_base", sa.Integer(), nullable=False),
        sa.Column("special_defense_min", sa.Integer(), nullable=False),
        sa.Column("special_defense_max", sa.Integer(), nullable=False),
        sa.Column("speed_base", sa.Integer(), nullable=False),
        sa.Column("speed_min", sa.Integer(), nullable=False),
        sa.Column("speed_max", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "ev_field",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("rate", sa.Integer(), nullable=False),
        sa.Column("stat", PokemonStat, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )


def downgrade():
    op.drop_table("pokemon_processed")
    op.drop_table("ev_field")
